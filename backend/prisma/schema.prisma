generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?  @db.VarChar(255)
  email     String   @unique(map: "email") @db.VarChar(255)
  password  String?  @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Menu {
  id          Int      @id @default(autoincrement())
  name        String  @unique() @db.VarChar(255)
  description String @db.VarChar(255)
  price       Int
  image       String @db.VarChar(255) @default("")
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sales MenusOnSales[]

  @@map("menus")
}

model Sale {
  id          Int      @id @default(autoincrement())
  saleDate DateTime
  description String @db.VarChar(255)
  customerName String @db.VarChar(255)
  customerPhone String @db.VarChar(15)
  customerAddress String @db.VarChar(255)
  ongkir Int @default(0)
  price Int @default(0)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  menus MenusOnSales[]

  @@map("sales")
}

model MenusOnSales {
  menu       Menu     @relation(fields: [menuId], references: [id])
  menuId     Int
  sale   Sale @relation(fields: [saleId], references: [id])
  saleId Int
  price Int
  amount Int
  unit String @db.VarChar(10)

  @@id([menuId, saleId])
  @@map("menus_on_sale")
}

model Material {
  id          Int      @id @default(autoincrement())
  name String @db.VarChar(255)
  price Int
  unit String @db.VarChar(20)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  purchases MaterialsOnPurchase[]

  @@map("materials")
}

model Purchase {
  id          Int      @id @default(autoincrement())
  purchaseDate DateTime
  description String @db.VarChar(255)
  price Int
  storeName String @db.VarChar(255)
  storePhone String @db.VarChar(15)
  storeAddress String @db.VarChar(255)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  materials MaterialsOnPurchase[]

  @@map("purchases")
}

model MaterialsOnPurchase {
  material    Material @relation(fields: [materialId], references: [id])
  materialId     Int
  purchase   Purchase @relation(fields: [purchaseId], references: [id])
  purchaseId Int
  price Int
  amount Int
  unit String @db.VarChar(10)

  @@id([materialId, purchaseId])
  @@map("materials_on_purchase")
}

model Customer {
  id          Int      @id @default(autoincrement())
  slug String @db.VarChar(320) @unique
  name String @db.VarChar(50)
  phone String @db.VarChar(15)
  address String @db.VarChar(255)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("customers")
}

model Store {
  id          Int      @id @default(autoincrement())
  slug String @db.VarChar(320) @unique
  name String @db.VarChar(50)
  phone String @db.VarChar(15)
  address String @db.VarChar(255)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("stores")
}
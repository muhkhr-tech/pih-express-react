generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Menu {
  id          Int      @id @default(autoincrement())
  name        String  @unique() @db.VarChar(255)
  description String @db.VarChar(255)
  price       Int
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  sellings MenusOnSellings[]

  @@map("menus")
}

model Selling {
  id          Int      @id @default(autoincrement())
  sellingDate DateTime
  description String @db.VarChar(255)
  customerName String @db.VarChar(255)
  customerPhone String @db.VarChar(15)
  customerAddress String @db.VarChar(255)
  ongkir Int @default(0)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  menus MenusOnSellings[]

  @@map("sellings")
}

model MenusOnSellings {
  menu       Menu     @relation(fields: [menuId], references: [id])
  menuId     Int
  selling   Selling @relation(fields: [sellingId], references: [id])
  sellingId Int
  price Int
  amount Int
  unit String @db.VarChar(10)

  @@id([menuId, sellingId])
}

model Customer {
  id          Int      @id @default(autoincrement())
  name String @db.VarChar(50)
  phone String @db.VarChar(15)
  address String @db.VarChar(255)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("customers")
}

model Material {
  id          Int      @id @default(autoincrement())
  name String @db.VarChar(255)
  price Int
  unit String @db.VarChar(20)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  stores MaterialsOnStore[]

  @@map("materials")
}

model Store {
  id          Int      @id @default(autoincrement())
  name String @db.VarChar(255)
  phone String @db.VarChar(15)
  address String @db.VarChar(255)
  active      Boolean @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  materials MaterialsOnStore[]

  @@map("stores")
}

model MaterialsOnStore {
  material    Material @relation(fields: [materialId], references: [id])
  materialId     Int
  store   Store @relation(fields: [storeId], references: [id])
  storeId Int
  price Int
  amount Int
  unit String @db.VarChar(10)

  @@id([materialId, storeId])
}

model Purchase {
  id          Int      @id @default(autoincrement())
  purchaseDate DateTime
  description String @db.VarChar(255)
  price Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("purchases")
}